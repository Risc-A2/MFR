name: Build and Publish Release

on: [push]

env:
  DOTNET_VERSION: '9.0.x' # Ajusta según tu versión de .NET
  PROJECT_NAME: 'MFR'     # Nombre de tu proyecto .csproj
  OUTPUT_DIR: 'publish'

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest,]
        include:
          - os: windows-latest
            runtime: win-x64
            ext: '.exe'
            zip-tool: 'powershell Compress-Archive -Path ./* -DestinationPath ../MFR-win-x64.zip -Force'
          - os: ubuntu-latest
            runtime: linux-x64
            ext: ''
            zip-tool: 'zip -r ../MFR-linux-x64.zip ./*'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install SkiaSharp dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libfontconfig1 libharfbuzz-dev
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: |
        dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -o ${{ env.OUTPUT_DIR }}/${{ matrix.runtime }}

    - name: Zip artifacts
      run: |
        cd ${{ env.OUTPUT_DIR }}/${{ matrix.runtime }}
        ${{ matrix.zip-tool }}
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ matrix.runtime }}
        path: ${{ env.OUTPUT_DIR }}/MFR-${{ matrix.runtime }}.zip

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: "Build for Windows, Linux, and macOS. Includes SkiaSharp rendering."
        files: |
          artifacts/MFR-win-x64.zip
          artifacts/MFR-linux-x64.zip
          artifacts/MFR-osx-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
